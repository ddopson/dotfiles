[include]
  # For username / creds / etc
  path = ~/.gitconfig.local

[status]
  submodulesummary = true # meh, why not.  don't use submodules unless you have to

[push]
  default = current # this should be the safe default.  Without this, by default, 'git push' will push all branches, possibly pushing unintended changes

[diff]
  renames = true
  noprefix = true # drops the annoying a/filename.foo b/filename.foo prefixes

[merge]
  # This is REALLY useful.  Adds 'original_version' to diffs like so:
  # <<<<<<<
  # OUR_VERSION
  # |||||||
  # ORIGNINAL_VERSION
  # =======
  # THEIR_VERSION
  # >>>>>>>
  conflictstyle = diff3

[format]
  pretty = fuller # more detail for "git show"

[color]
  ui = true # everybody loves color (except for Linus :( )

[column]
  # This lets "git stat" stack multiple filenames per row (like vanilla 'ls')
  ui = always

[alias]
  # Awesome.  Compares current branch to origin/master or a branch of your choosing, displaying commits to/from the other branch
  # Try "git vs --stat" as well
  vs = "! \
    O=(); \
    SEEN_DD=false; \
    unset A; \
    while [ ! -z \"$1\" ]; do \
      if [[ \"$1\" =~ ^- ]] || $SEEN_DD; then \
        O=(\"${O[@]}\" $1); \
        if [ \"$1\" == \"--\" ]; then SEEN_DD=true; fi; \
      elif [ -z \"$A\" ]; then \
        A=\"$1\"; \
      else \
        O=(\"${O[@]}\" \"$1\"); \
      fi; \
      shift; \
    done; \
    if ! $SEEN_DD; then O=(\"${O[@]}\" \"--\"); fi; \
    A=\"${A-origin/master}\"; \
    B=\"$(git symbolic-ref HEAD --short)\"; \
    echo From \"$A..$B:\"; \
    git hist $A..$B \"${O[@]}\"; \
    echo; \
    echo From \"$B..$A:\"; \
    git hist $B..$A \"${O[@]}\"; \
    "

  recent = "! git show origin/master.. --oneline --stat=200 --color  | egrep '^ [^1-9]' | sort | column -s'|' -t"

  fixup = commit --fixup
  autosquash = rebase -i HEAD~20 --autosquash --preserve-merges
  amend = commit --amend
  sub = submodule
  subs = submodule foreach git
  co = checkout
  stage = add -u
  unstage = reset HEAD
  stat = status
  st = status -- .
  b = !git branch -vv
  ba = !git branch -avv

  hist    = !git log --graph --date-order --date=short --pretty=tformat:'%x08%C(bold red)%d%C(reset) %C(yellow)%h %C(reset) %ad %C(red)[%an]%C(reset) %s' --color=always
  h       = !git --no-pager hist -10
  hh      = !git --no-pager hist -20
  hhh     = !git --no-pager hist
  hstat   = !git h --stat
  hhstat  = !git hh --stat
  hhhstat = !git hhh --stat
  hstats  = !git h --shortstat --dirstat=changes,10
  hhstats = !git hh --shortstat --dirstat=changes,10
  hhhstats= !git hhh--shortstat --dirstat=changes,10

#| perl -pe 's/^((?:(?:\\033[^m]*m)|[| *\\x08]|[(][^)]+[)])+[a-f0-9]{7,})(?:(?:\\033[^m]*m)|[ ])+[a-f0-9]{7,}((?:(?:\\033[^m]*m)|[ ])+)[[]/${1}${2}[/'
  histold = !git --no-pager log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short --date-order -20
  historyold = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short  --date-order
  tp = !git push -nv && git pull -nv
  pull-all = pull --all -v
  push-all = push --all -v
  dc = diff --cached
  pick = cherry-pick
  ignored = !git clean -ndX | perl -pe 's/Would remove/ignored:/'

